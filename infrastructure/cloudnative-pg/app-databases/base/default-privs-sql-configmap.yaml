apiVersion: v1
kind: ConfigMap
metadata:
  name: default-privs-sql
data:
  default-privs.sql: |
    -- variables: -v DB_NAME=... -v OWNER_ROLE=... -v APP_ROLE=...

    -- Create OWNER_ROLE if missing
    SELECT format(
      $$DO $$
      BEGIN
        IF NOT EXISTS (SELECT 1 FROM pg_roles WHERE rolname = %L) THEN
          CREATE ROLE %I LOGIN;
        END IF;
      END$$;$$,
      :'OWNER_ROLE', :'OWNER_ROLE'
    ) \gexec

    -- Create APP_ROLE if missing
    SELECT format(
      $$DO $$
      BEGIN
        IF NOT EXISTS (SELECT 1 FROM pg_roles WHERE rolname = %L) THEN
          CREATE ROLE %I NOLOGIN;
        END IF;
      END$$;$$,
      :'APP_ROLE', :'APP_ROLE'
    ) \gexec

    -- Make the app role owned by Vault's DB user so Vault can grant it
    \set vm 'vault_manager'
    SELECT format('ALTER ROLE %I OWNER TO %I', :'APP_ROLE', :'vm') \gexec

    -- Allow Vault's DB user to grant the app role (belt-and-suspenders)
    SELECT format('GRANT %I TO %I WITH ADMIN OPTION', :'APP_ROLE', :'vm') \gexec

    -- Grant CONNECT at cluster level:
    SELECT format('GRANT CONNECT ON DATABASE %I TO %I', :'DB_NAME', :'APP_ROLE') \gexec

    -- Switch to target DB for schema/default-privileges work:
    \connect :DB_NAME

    -- Ensure schema exists
    SELECT format('CREATE SCHEMA IF NOT EXISTS %I', :'DB_NAME') \gexec

    -- USAGE on schema:
    SELECT format('GRANT USAGE ON SCHEMA %I TO %I', :'DB_NAME', :'APP_ROLE') \gexec

    -- Table/sequence privileges on existing objects:
    SELECT format('GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA %I TO %I', :'DB_NAME', :'APP_ROLE') \gexec
    SELECT format('GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA %I TO %I', :'DB_NAME', :'APP_ROLE') \gexec

    -- Default privileges for future objects created by OWNER_ROLE:
    SELECT format('ALTER DEFAULT PRIVILEGES FOR ROLE %I IN SCHEMA %I GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO %I',
                  :'OWNER_ROLE', :'DB_NAME', :'APP_ROLE') \gexec
    SELECT format('ALTER DEFAULT PRIVILEGES FOR ROLE %I IN SCHEMA %I GRANT USAGE, SELECT ON SEQUENCES TO %I',
                  :'OWNER_ROLE', :'DB_NAME', :'APP_ROLE') \gexec

    -- Search path for the OWNER_ROLE in this DB:
    \connect postgres
    SELECT format('ALTER ROLE %I IN DATABASE %I SET search_path = %I, public',
                  :'OWNER_ROLE', :'DB_NAME', :'DB_NAME') \gexec
